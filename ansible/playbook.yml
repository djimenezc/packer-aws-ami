- name: 'Provision Image'
  hosts: default
  become: true
  gather_facts: true

  vars_files:
    - vars/all.yml

  tasks:
    - name: Add Docker GPG apt Key
      become: yes
      become_user: root
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Add OpenJDK GPG apt Key
      apt_key:
        url: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
        state: present

    - name: Add OpenJDK Repository
      apt_repository:
        repo: deb https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ focal main
        state: present

    - name: Set DPKG architecture
      set_fact:
        dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"

    - debug:
        var: dpkg_arch

    - name: Get Podman repository key
      get_url:
        url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_facts['lsb']['release'] }}/Release.key"
        dest: /tmp/podman-archive-keyring.gpg

    - name: Dearmor repository key
      command:
        cmd: "gpg --output /usr/share/keyrings/podman-archive-keyring.gpg --dearmor /tmp/podman-archive-keyring.gpg"
        creates: /usr/share/keyrings/podman-archive-keyring.gpg

    - name: Add podman PPA
      apt_repository:
        repo: "deb [arch={{ dpkg_arch }} signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg] https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_facts['lsb']['release'] }}"

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install dependencies
      apt:
        name:
          - software-properties-common
          - git
          - vim
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
          - python3
          - python3-pip
          - awscli
          - jq
          - telnet
          - tmux
          - qemu
          - binfmt-support
          - qemu-user-static
          - qemu-system-arm
          - golang
          - docker-ce
          - buildah
          - skopeo
          - podman
          - adoptopenjdk-11-hotspot
        state: present
        update_cache: yes

    - name: Install aws-ssm-agent
      community.general.snap:
        name:
          - amazon-ssm-agent

    - name: Creates directory
      file:
        path: "/home/{{ ansible_env.USER }}/Downloads"
        state: directory

    - name: Download poetry installer
      get_url:
        url="https://install.python-poetry.org"
        dest="/home/{{ ansible_env.USER }}/Downloads/poetry_installer.py"

    - name: Get podman version
      ansible.builtin.shell: podman --version
      register: result

    - name: Print return information from the previous task
      ansible.builtin.debug:
        msg:
          - "Podman version {{result}}"

    - name: Install poetry
      ansible.builtin.command: python3 /home/{{ ansible_env.USER }}/Downloads/poetry_installer.py
      register: result

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: result
        verbosity: 2
