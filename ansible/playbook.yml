- name: 'Provision Image'
  hosts: default
  become: true
  gather_facts: true

  vars_files:
    - vars/all.yml

  pre_tasks:
    - name: Add Docker GPG apt Key
      become: yes
      become_user: root
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Create keyring directory
      ansible.builtin.file:
        state: directory
        path: /etc/apt/keyrings
        mode: 0755

    - name: Get adoptium gpg key
      ansible.builtin.get_url:
        url: https://packages.adoptium.net/artifactory/api/gpg/key/public
        dest: /tmp/adoptium.gpg

    - name: Dearmor adoptium gpg key
      ansible.builtin.shell: gpg --dearmor -o /etc/apt/keyrings/adoptium.gpg /tmp/adoptium.gpg
      args:
        creates: /etc/apt/keyrings/adoptium.gpg

    - name: Get platform architecture
      ansible.builtin.shell: dpkg --print-architecture
      register: platform_architecture
      changed_when: false

    - name: Get OS version
      ansible.builtin.shell: . /etc/os-release && echo "$VERSION_CODENAME"
      register: os_version
      changed_when: false

    - name: Add adoptium repository
      ansible.builtin.lineinfile:
#        line: "deb [arch=amd64 signed-by=/etc/apt/keyrings/powerdns.gpg] http://repo.powerdns.com/ubuntu jammy-dnsdist-18 main"
        line: "deb [arch=\"{{ platform_architecture.stdout }}\" signed-by=/etc/apt/keyrings/adoptium.gpg] https://packages.adoptium.net/artifactory/deb {{ os_version.stdout }} main"
        path: /etc/apt/sources.list.d/adoptium.list
        create: true

    - name: Set DPKG architecture
      set_fact:
        dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"

    - name: Get Podman repository key
      get_url:
        url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_facts['lsb']['release'] }}/Release.key"
        dest: /tmp/podman-archive-keyring.gpg

    - name: Dearmor repository key
      command:
        cmd: "gpg --output /usr/share/keyrings/podman-archive-keyring.gpg --dearmor /tmp/podman-archive-keyring.gpg"
        creates: /usr/share/keyrings/podman-archive-keyring.gpg

    - name: Add podman PPA
      apt_repository:
        repo: "deb [arch={{ dpkg_arch }} signed-by=/usr/share/keyrings/podman-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_facts['lsb']['release'] }}/ /"

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install dependencies
      apt:
        name:
          - software-properties-common
          - git
          - vim
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
          - python3
          - python3-pip
          - awscli
          - jq
          - telnet
          - tmux
          - qemu
          - binfmt-support
          - qemu-user-static
          - qemu-system-arm
          - qemu-system-x86
          - golang
          - docker-ce
          - buildah
          - skopeo
          - podman
          - temurin-11-jdk
        state: present
        update_cache: yes

    - name: Get podman version
      ansible.builtin.shell: podman --version
      register: result

    - name: Print return information from the previous task
      ansible.builtin.debug:
        msg:
          - "Podman version {{result}}"

    - name: Install aws-ssm-agent
      community.general.snap:
        name:
          - amazon-ssm-agent

    - name: Creates directory
      file:
        path: "/home/{{ ansible_env.USER }}/Downloads"
        state: directory

    - name: Adding user ubuntu to docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes

  vars:
    rolespec_validate: true
  roles:
    - name: djimenezc.poetry
      become: true
      become_user: ubuntu
      vars:
        poetry_version: 1.5.0
        poetry_python_path: python3
